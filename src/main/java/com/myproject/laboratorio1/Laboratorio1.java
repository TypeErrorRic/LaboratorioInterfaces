/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.myproject.laboratorio1;

import java.awt.BorderLayout;

import org.jfree.data.xy.XYSeries;

import com.myproject.laboratorio1.botonGuardar;
import java.awt.Color;

/**
 * @author Arley
 */
public class Laboratorio1 extends javax.swing.JFrame {

    /**
     * Creates new form Laboratorio1
     */
    private LineGraph graficaAnalogica;
    private LineGraph graficaDigital;
    
    public Laboratorio1() {
        initComponents();
        // Instanciar las dos gráficas
        graficaAnalogica = new LineGraph("Señal Analógica", "Tiempo", "Valor", 100);
        graficaDigital = new LineGraph("Señal Digital", "Tiempo", "Valor", 100);
        panelSenalAnalogica.add(graficaAnalogica.getChartPanel(), BorderLayout.CENTER);
        panelSenalDigital.add(graficaDigital.getChartPanel(), BorderLayout.CENTER);
        
        // Establecer títulos iniciales basados en las selecciones por defecto de los ComboBox
        actualizarTitulosIniciales();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        panelSuperior = new javax.swing.JPanel();
        titulo = new javax.swing.JLabel();
        panelCentral = new javax.swing.JPanel();
        panelSenales = new javax.swing.JPanel();
        panelSenalAnalogica = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        panelSenalDigital = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        panelSenalSalida = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        panelInferior = new javax.swing.JPanel();
        EtiquetaValorMuestreoAnalogico = new javax.swing.JLabel();
        ValorMuestreoAnalogico = new javax.swing.JTextField();
        BotonCambiarMuestreoAnalogico = new javax.swing.JButton();
        TiempoMuestreoActualAnalogico = new javax.swing.JLabel();
        EtiquetaValorMuestreoDigital = new javax.swing.JLabel();
        TiempoMuestreoActualDigital = new javax.swing.JLabel();
        ValorMuestreoDigital = new javax.swing.JTextField();
        BotonCambiarMuestroDigital = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setPreferredSize(new java.awt.Dimension(1280, 720));
        bg.setLayout(new java.awt.BorderLayout());

        titulo.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        titulo.setText("SUPERVISIÓN Y CONTROL DE SEÑALES");
        panelSuperior.add(titulo);

        bg.add(panelSuperior, java.awt.BorderLayout.PAGE_START);

        panelCentral.setBackground(new java.awt.Color(255, 255, 255));
        panelCentral.setLayout(new java.awt.BorderLayout());

        panelSenales.setLayout(new java.awt.GridLayout(0, 2));

        panelSenalAnalogica.setLayout(new java.awt.BorderLayout());

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel6.setText("Señal analógica");
        jPanel4.add(jLabel6);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));
        jComboBox1.setPreferredSize(new java.awt.Dimension(40, 22));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel4.add(jComboBox1);

        panelSenalAnalogica.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        panelSenales.add(panelSenalAnalogica);

        panelSenalDigital.setLayout(new java.awt.BorderLayout());

        jLabel7.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel7.setText("Señal digital");
        jPanel2.add(jLabel7);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        jComboBox2.setPreferredSize(new java.awt.Dimension(40, 22));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox2);

        panelSenalDigital.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        panelSenales.add(panelSenalDigital);

        panelCentral.add(panelSenales, java.awt.BorderLayout.CENTER);

        panelSenalSalida.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Señales de salida:");
        panelSenalSalida.add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        jToggleButton1.setText("jToggleButton1");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton1);

        jToggleButton2.setText("jToggleButton2");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton2);

        jToggleButton3.setText("jToggleButton3");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton3);

        jToggleButton4.setText("jToggleButton4");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton4);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        panelSenalSalida.add(jPanel1, java.awt.BorderLayout.CENTER);

        panelCentral.add(panelSenalSalida, java.awt.BorderLayout.LINE_END);

        bg.add(panelCentral, java.awt.BorderLayout.CENTER);

        EtiquetaValorMuestreoAnalogico.setText("Tiempo de Muestreo");

        ValorMuestreoAnalogico.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ValorMuestreoAnalogico.setToolTipText("ValorMuestreo");
        ValorMuestreoAnalogico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValorMuestreoAnalogicoActionPerformed(evt);
            }
        });

        BotonCambiarMuestreoAnalogico.setText("Cambiar");

        TiempoMuestreoActualAnalogico.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TiempoMuestreoActualAnalogico.setBorder(javax.swing.BorderFactory.createLineBorder(null));

        EtiquetaValorMuestreoDigital.setText("Tiempo de Muestreo");

        TiempoMuestreoActualDigital.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TiempoMuestreoActualDigital.setBorder(javax.swing.BorderFactory.createLineBorder(null));

        ValorMuestreoDigital.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ValorMuestreoDigital.setToolTipText("ValorMuestreo");
        ValorMuestreoDigital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValorMuestreoDigitalActionPerformed(evt);
            }
        });

        BotonCambiarMuestroDigital.setText("Cambiar");

        javax.swing.GroupLayout panelInferiorLayout = new javax.swing.GroupLayout(panelInferior);
        panelInferior.setLayout(panelInferiorLayout);
        panelInferiorLayout.setHorizontalGroup(
            panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EtiquetaValorMuestreoAnalogico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TiempoMuestreoActualAnalogico, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ValorMuestreoAnalogico, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonCambiarMuestreoAnalogico)
                .addGap(281, 281, 281)
                .addComponent(EtiquetaValorMuestreoDigital)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TiempoMuestreoActualDigital, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ValorMuestreoDigital, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonCambiarMuestroDigital)
                .addContainerGap(387, Short.MAX_VALUE))
        );
        panelInferiorLayout.setVerticalGroup(
            panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TiempoMuestreoActualDigital, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BotonCambiarMuestroDigital)
                        .addComponent(ValorMuestreoDigital, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EtiquetaValorMuestreoDigital, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TiempoMuestreoActualAnalogico, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BotonCambiarMuestreoAnalogico)
                        .addComponent(ValorMuestreoAnalogico, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EtiquetaValorMuestreoAnalogico, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        bg.add(panelInferior, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
        );

        // ====== Botón Guardar CSV ======
        btnGuardar = new javax.swing.JButton();
        btnGuardar.setText("💾 Exportar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar);

        BotonCambiarMuestreoAnalogico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCambiarMuestreoAnalogicoActionPerformed(evt);
            }
        });
        panelInferior.add(BotonCambiarMuestreoAnalogico);

        BotonCambiarMuestroDigital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCambiarMuestroDigitalActionPerformed(evt);
            }
        });
        panelInferior.add(BotonCambiarMuestroDigital);

        //Actualizar Botones:
        jToggleButton1.setSelected(false);
        actualizarToggle(jToggleButton1);
        jToggleButton2.setSelected(false);
        actualizarToggle(jToggleButton2);
        jToggleButton3.setSelected(false);
        actualizarToggle(jToggleButton3);
        jToggleButton4.setSelected(false);
        actualizarToggle(jToggleButton4);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actualizarToggle(javax.swing.JToggleButton b) {
        boolean encendido = b.isSelected();

        if (encendido) {
            b.setText("ON");
            b.setBackground(new Color(46, 204, 113)); // verde
            b.setForeground(Color.WHITE);
        } else {
            b.setText("OFF");
            b.setBackground(new Color(231, 76, 60)); // rojo
            b.setForeground(Color.WHITE);
        }

        // Para que el color de fondo se vea con varios Look&Feels
        b.setOpaque(true);
        b.setContentAreaFilled(true);
        b.setFocusPainted(false);
    }


    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {
        botonGuardar.guardarComoCSV(graficaAnalogica.getSeriexy(), graficaDigital.getSeriexy(), this);
    }
    
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        actualizarToggle(jToggleButton1);
    }

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        actualizarToggle(jToggleButton2);
    }

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        actualizarToggle(jToggleButton3);
    }

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        actualizarToggle(jToggleButton4);
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // double x = System.currentTimeMillis()/1000.0;
        // double y = Math.random()*10;
        // graficaAnalogica.addDato(x,y);
        // graficaDigital.addDato(x,y);
        graficaAnalogica.iniciarGraficacion("1", 50); // cada 100 ms
        graficaDigital.iniciarGraficacion("2", 50); // cada 100 ms
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // Obtener la selección del ComboBox1 (señales analógicas)
        String seleccion = (String) jComboBox1.getSelectedItem();
        
        // Obtener el nombre de la señal basado en la selección
        String nombreSenal = obtenerNombreSenal(seleccion, true); // true para analógica
        
        // Cambiar el título de la gráfica analógica
        graficaAnalogica.setTitle(nombreSenal);
        
        System.out.println("Señal analógica seleccionada: " + nombreSenal);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void ValorMuestreoAnalogicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValorMuestreoAnalogicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValorMuestreoAnalogicoActionPerformed

    private void ValorMuestreoDigitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValorMuestreoDigitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValorMuestreoDigitalActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // Obtener la selección del ComboBox2 (señales digitales)
        String seleccion = (String) jComboBox2.getSelectedItem();
        
        // Obtener el nombre de la señal basado en la selección
        String nombreSenal = obtenerNombreSenal(seleccion, false); // false para digital
        
        // Cambiar el título de la gráfica digital
        graficaDigital.setTitle(nombreSenal);
        
        System.out.println("Señal digital seleccionada: " + nombreSenal);
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void BotonCambiarMuestreoAnalogicoActionPerformed(java.awt.event.ActionEvent evt) {
        // Capturar el valor ingresado en el campo de texto
        String valorIngresado = ValorMuestreoAnalogico.getText().trim();
        
        // Validar que no esté vacío
        if (!valorIngresado.isEmpty()) {
            try {
                // Validar que sea un número válido y positivo
                double valor = Double.parseDouble(valorIngresado);
                
                if (valor > 0) {
                    // Actualizar la etiqueta que muestra el tiempo de muestreo actual
                    TiempoMuestreoActualAnalogico.setText(valorIngresado);
                    
                    // Limpiar el campo de texto después de actualizar
                    ValorMuestreoAnalogico.setText("");
                    
                    System.out.println("Tiempo de muestreo analógico actualizado a: " + valorIngresado);
                } else {
                    // Manejar error si el valor no es positivo
                    System.err.println("Error: El valor debe ser mayor que cero");
                    javax.swing.JOptionPane.showMessageDialog(this, 
                        "El tiempo de muestreo debe ser un valor positivo (mayor que 0)", 
                        "Valor inválido", 
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                // Manejar error si el valor no es un número válido
                System.err.println("Error: El valor ingresado no es un número válido");
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Por favor ingrese un valor numérico válido", 
                    "Error de formato", 
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Manejar caso de campo vacío
            System.err.println("Error: Campo de texto vacío");
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Por favor ingrese un valor", 
                "Campo vacío", 
                javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }

    private void BotonCambiarMuestroDigitalActionPerformed(java.awt.event.ActionEvent evt) {
        // Capturar el valor ingresado en el campo de texto
        String valorIngresado = ValorMuestreoDigital.getText().trim();
        
        // Validar que no esté vacío
        if (!valorIngresado.isEmpty()) {
            try {
                // Validar que sea un número válido y positivo
                double valor = Double.parseDouble(valorIngresado);
                
                if (valor > 0) {
                    // Actualizar la etiqueta que muestra el tiempo de muestreo actual
                    TiempoMuestreoActualDigital.setText(valorIngresado);
                    
                    // Limpiar el campo de texto después de actualizar
                    ValorMuestreoDigital.setText("");
                    
                    System.out.println("Tiempo de muestreo digital actualizado a: " + valorIngresado);
                } else {
                    // Manejar error si el valor no es positivo
                    System.err.println("Error: El valor debe ser mayor que cero");
                    javax.swing.JOptionPane.showMessageDialog(this, 
                        "El tiempo de muestreo debe ser un valor positivo (mayor que 0)", 
                        "Valor inválido", 
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                // Manejar error si el valor no es un número válido
                System.err.println("Error: El valor ingresado no es un número válido");
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Por favor ingrese un valor numérico válido", 
                    "Error de formato", 
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Manejar caso de campo vacío
            System.err.println("Error: Campo de texto vacío");
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Por favor ingrese un valor", 
                "Campo vacío", 
                javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * Actualiza los títulos de las gráficas basado en las selecciones por defecto de los ComboBox.
     * Se llama al inicializar la aplicación.
     */
    private void actualizarTitulosIniciales() {
        // Obtener selecciones por defecto y actualizar títulos
        String seleccionAnalogica = (String) jComboBox1.getSelectedItem();
        String seleccionDigital = (String) jComboBox2.getSelectedItem();
        
        if (seleccionAnalogica != null) {
            String nombreAnalogica = obtenerNombreSenal(seleccionAnalogica, true);
            graficaAnalogica.setTitle(nombreAnalogica);
        }
        
        if (seleccionDigital != null) {
            String nombreDigital = obtenerNombreSenal(seleccionDigital, false);
            graficaDigital.setTitle(nombreDigital);
        }
    }

    /**
     * Método auxiliar que mapea las selecciones numéricas del ComboBox a nombres descriptivos de señales.
     * 
     * @param seleccion El valor seleccionado en el ComboBox (como String)
     * @param esAnalogica true si es para señal analógica, false si es para señal digital
     * @return String con el nombre descriptivo de la señal
     */
    private String obtenerNombreSenal(String seleccion, boolean esAnalogica) {
        if (seleccion == null) {
            return esAnalogica ? "Señal Analógica" : "Señal Digital";
        }
        
        if (esAnalogica) {
            // Mapeo para señales analógicas (ComboBox1: opciones 1-8)
            switch (seleccion) {
                case "1": return "Señal Seno";
                case "2": return "Señal Coseno";
                case "3": return "Señal Triangular";
                case "4": return "Señal Rampa";
                case "5": return "Señal Exponencial";
                case "6": return "Señal Logarítmica";
                case "7": return "Señal Parabólica";
                case "8": return "Señal Gaussiana";
                default: return "Señal Analógica - Opción " + seleccion;
            }
        } else {
            // Mapeo para señales digitales (ComboBox2: opciones 1-4)
            switch (seleccion) {
                case "1": return "Señal Cuadrada";
                case "2": return "Señal Pulso";
                case "3": return "Señal PWM";
                case "4": return "Señal Escalón";
                default: return "Señal Digital - Opción " + seleccion;
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Laboratorio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Laboratorio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Laboratorio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Laboratorio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Laboratorio1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton BotonCambiarMuestreoAnalogico;
    private javax.swing.JButton BotonCambiarMuestroDigital;
    private javax.swing.JLabel EtiquetaValorMuestreoAnalogico;
    private javax.swing.JLabel EtiquetaValorMuestreoDigital;
    private javax.swing.JLabel TiempoMuestreoActualAnalogico;
    private javax.swing.JLabel TiempoMuestreoActualDigital;
    private javax.swing.JTextField ValorMuestreoAnalogico;
    private javax.swing.JTextField ValorMuestreoDigital;
    private javax.swing.JPanel bg;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JPanel panelCentral;
    private javax.swing.JPanel panelInferior;
    private javax.swing.JPanel panelSenalAnalogica;
    private javax.swing.JPanel panelSenalDigital;
    private javax.swing.JPanel panelSenalSalida;
    private javax.swing.JPanel panelSenales;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JLabel titulo;
    private javax.swing.JButton btnGuardar;
}
